% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/load_df_bcp.R
\name{load_df_bcp}
\alias{load_df_bcp}
\title{Load an R Data.Frame to SQL Server Using BCP (Bulk Copy Program)}
\usage{
load_df_bcp(
  dataset,
  server,
  db_name,
  schema_name,
  table_name,
  user = NULL,
  pass = NULL
)
}
\arguments{
\item{dataset}{A data.frame or data.table to be loaded, or a character string
specifying the filepath of a text file to be loaded.}

\item{server}{For on-premises servers: the SQL Server instance name (e.g.,
'SQLSERVER01'). For Azure SQL servers: the name of an ODBC System DSN that
you must create first (see Details section for setup instructions).

\emph{Note!} \code{server = 'PHClaims'} will be mapped to \code{'KCITSQLPRPENT40'}}

\item{db_name}{The name of the target database.}

\item{schema_name}{The name of the schema containing the target table.}

\item{table_name}{The name of the target table.}

\item{user}{Optional. The username for SQL Server authentication. If provided,
\code{pass} must also be specified.}

\item{pass}{Optional. The password for SQL Server authentication. Required if
\code{user} is provided.}
}
\value{
A character vector containing the output of the BCP command.
}
\description{
This function loads data into a SQL Server database table using
the \href{https://learn.microsoft.com/en-us/sql/tools/bcp-utility?}{BCP (Bulk Copy Program)}
utility. Data.frames are written to a temporary file before loading; file
paths are used directly.
}
\details{
You will need to install the \href{https://learn.microsoft.com/en-us/sql/tools/bcp-utility?}{BCP utility}
to efficiently load data into a SQL Server table. Use the "Download
Microsoft Command Line Utilities 15 for SQL Server (x64)" version. To check
if BCP is already installed, just open your Windows command prompt and type
\code{bcp}. If it is installed, you'll see BCP usage information and syntax. If it
isn't installed, you'll see an error like 'bcp is not recognized as an internal
or external command'. After installation, it will support both Windows
authentication and SQL Server authentication.

\strong{TO USE WITH AZURE:} You must create an ODBC Data Source Name (DSN) that
matches your server name. Open "ODBC Data Sources (64-bit)" from Windows Start
menu, go to System DSN tab, click Add, and select "ODBC Driver 17 for SQL Server"
(NOT Driver 18, which has compatibility issues with BCP). Configure the DSN with
your server name as the Name field, select "With Azure Active Directory Password
authentication", enter your login credentials, and test the connection. The DSN
name must exactly match the server parameter you pass to this function.

The function uses the following pre-specified BCP parameters:
\itemize{
\item \strong{\verb{-r \\\\n}}: Row terminator (newline character)
\item \strong{\verb{-t \\\\t}}: Field terminator (tab character)
\item \strong{\verb{-C 65001}}: Use UTF-8 encoding
\item \strong{\verb{-F 2}}: Skip the first row (assumes headers)
\item \strong{\verb{-b 100000}}: Batch size of 100,000 rows
\item \strong{\code{-c}}: Character data type format
\item \strong{\code{-q}}: Use quoted identifiers for special characters in names
}

If the BCP command fails, the function will stop with an error message for
troubleshooting.
}
\note{
This function replaces the deprecated \code{load_df_bcp_f} function from the
\code{apde} package.
}
\examples{
 \dontrun{
  # Note: Target table must exist before loading data!

  # Create example data
  df <- data.frame(id = 1:5, name = c("Anne", "Blishda", "Carrie", "Daniel", "Eva"))

  # Load data to on-premises server using Windows authentication
  load_df_bcp(dataset = df,
              server = "KCITSQLUATHIP40",# actual server name
              db_name = "phextractstore",
              schema_name = "APDE_WIP",
              table_name = "my_table")

  # Load data to Azure server using ODBC DSN and stored credentials
  load_df_bcp(dataset = df,
              server = "hhsaw_dev", # ODBC DSN
              db_name = "hhs_analytics_workspace",
              schema_name = "dbo",
              table_name = "my_table",
              user = keyring::key_list("hhsaw_dev")[["username"]],
              pass = keyring::key_get("hhsaw_dev", keyring::key_list("hhsaw_dev")[["username"]]))

  # Load data from a file path directly
  load_df_bcp(dataset = "C:/path/to/data.txt",
              server = "hhsaw_dev",
              db_name = "hhs_analytics_workspace",
              schema_name = "dbo",
              table_name = "my_table",
              user = "myuser",
              pass = "mypassword")
 }

}
\seealso{
\link[rads:tsql_chunk_loader]{tsql_chunk_loader} for a pure R alternative with
retry logic, data type validation, and finer control. It is better suited for
moderate-sized datasets.
}
\author{
Jeremy Whitehurst, 2025-02-05
}
